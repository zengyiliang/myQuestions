mysql的最优化
阶段：一、表设计阶段 https://www.cnblogs.com/zhangwuji/p/8110916.html
               空值设置 
			   类型选择 
			   字符varchar长度设置  
			   数字表示中文 
			   大类型的限制 
			   多字段的大表拆分成主表和从表
			   三范式的遵循：1、每一列属性都是不可再分的属性值，确保每一列的原子性
							 2、每一行的数据只能与其中一列相关，即一行数据只做一件事
							 3、数据不能存在传递关系，即没个属性都跟主键有直接关系而不是间接关系
			   
      二、表使用中
	    联表查询的时候关联字段要创建索引 
		优化查询语句 尽量命中索引
        单表查询		
	  三、表数据量大的时候 
	  1、读写分离  
	  2、大表拆分 
	  3、分库分表


3.nginx介绍
3.1.什么是nginx
	Nginx是一款高性能的http 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器。由俄罗斯的程序设计师Igor Sysoev所开发，官方测试nginx能够支支撑5万并发链接，
	并且cpu、内存等资源消耗却非常低，运行非常稳定。
3.2.Nginx的应用场景
1、http服务器。Nginx是一个http服务可以独立提供http服务。可以做网页静态服务器。
2、虚拟主机。可以实现在一台服务器虚拟出多个网站。例如个人网站使用的虚拟主机。
3、反向代理，负载均衡。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用nginx做反向代理。并且多台服务器可以平均分担负载，
不会因为某台服务器负载高宕机而某台服务器闲置的情况。

4.nginx安装
4.1.下载
4.2.安装在centos2
i.nginx安装环境
	nginx是C语言开发，建议在linux上运行，本教程使用Centos6.5作为安装环境。
gcc
	安装nginx需要先将官网下载的源码进行编译，编译依赖gcc环境，如果没有gcc环境，需要安装gcc：
yum install gcc-c++ 
PCRE
	PCRE(Perl Compatible Regular Expressions)是一个Perl库，包括 perl 兼容的正则表达式库。nginx的http模块使用pcre来解析正则表达式，所以需要在linux上安装pcre库。
yum install -y pcre pcre-devel
注：pcre-devel是使用pcre开发的一个二次开发库。nginx也需要此库。
zlib
	zlib库提供了很多种压缩和解压缩的方式，nginx使用zlib对http包的内容进行gzip，所以需要在linux上安装zlib库。
yum install -y zlib zlib-devel

openssl
	OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。
	nginx不仅支持http协议，还支持https（即在ssl协议上传输http），所以需要在linux安装openssl库。
yum install -y openssl openssl-devel

ii.编译安装
将nginx-1.8.0.tar.gz拷贝至linux服务器。

解压：
tar -zxvf nginx-1.8.0.tar.gz
cd nginx-1.8.0

1、configure
./configure --help查询详细参数（参考本教程附录部分：nginx编译参数）

参数设置如下：
./configure \
--prefix=/usr/local/nginx \
--pid-path=/var/run/nginx/nginx.pid \
--lock-path=/var/lock/nginx.lock \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
--with-http_gzip_static_module \
--http-client-body-temp-path=/var/temp/nginx/client \
--http-proxy-temp-path=/var/temp/nginx/proxy \
--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \
--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \
--http-scgi-temp-path=/var/temp/nginx/scgi

注意：上边将临时文件目录指定为/var/temp/nginx，需要在/var下创建temp及nginx目录


2、编译安装
make
make  install

安装成功查看安装目录 ：



4.3.启动nginx
cd /usr/local/nginx/sbin/
./nginx 

查询nginx进程：
ps aux|grep nginx
history |grep nginx

15098是nginx主进程的进程id，15099是nginx工作进程的进程id

注意：执行./nginx启动nginx，这里可以-c指定加载的nginx配置文件，如下：
./nginx -c /usr/local/nginx/conf/nginx.conf
如果不指定-c，nginx在启动时默认加载conf/nginx.conf文件，此文件的地址也可以在编译安装nginx时指定./configure的参数（--conf-path= 指向配置文件（nginx.conf））

4.4.停止nginx
方式1，快速停止：
cd /usr/local/nginx/sbin
./nginx -s stop
此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。

方式2，完整停止(建议使用)：
cd /usr/local/nginx/sbin
./nginx -s quit
此方式停止步骤是待nginx进程处理任务完毕进行停止。


4.5.重启nginx
方式1，先停止再启动（建议使用）：
对nginx进行重启相当于先停止nginx再启动nginx，即先执行停止命令再执行启动命令。
如下：
./nginx -s quit
./nginx

方式2，重新加载配置文件：
当nginx的配置文件nginx.conf修改后，要想让配置生效需要重启nginx，使用-s reload不用先停止nginx再启动nginx即可将配置信息在nginx中生效，如下：
./nginx -s reload

4.6.安装测试
nginx安装成功，启动nginx，即可访问虚拟机上的nginx：
到这说明nginx基本上安装成功。

1、代理服务器
2、反向代理 负载均衡（权重设置，状态的设置，其中状态有宕机 备份机）
3、虚拟多台主机
4、静态资源服务器，图片服务器


1. 在http节点下，加入upstream节点。
upstream linuxidc { 
  server 10.0.0.11:9090 down; 
  server 10.0.0.11:8080 weight=2 max_fails=2 fail_timeout=60s;
  server 10.0.0.11:6060; 
  server 10.0.0.11:7070 backup; 
}
2.  将server节点下的location节点中的proxy_pass配置为：http:// + upstream名称，即“
http://linuxidc”.

server {
listen       80;
server_name  186.15.144.199;

location / { 
		root  html; 
		index  index.html index.htm; 
		proxy_pass http://linuxidc; 
}
请求跳转：
www.zeng.con =====DNS===>>  186.15.144.199:80 ====Nginx=====>>http://linuxidc =====upstream===>>http://10.10.10.108:8888 ===gateway===>>webservice

修改nginx配置文件，nginx.conf
增加 work_rlimit_nofile 和 worker_connections 数量，并禁用keepalive_timeout。

worker_processes  1;
worker_rlimit_nofile 20000;

events {
    use epoll;
    worker_connections 20000;
    multi_accept on;
}

http {
　　keepalive_timeout 0;
}

nginx限制ip 跨域 链接数 并发数量
限制访问次数 黑名单 允许ip 流量
高并发下的限流
limit_req_zone 用来限制单位时间内的请求数，即速率限制,采用的漏桶算法 "leaky bucket"
limit_req_conn 用来限制同一时间连接数，即并发限制
设置用户下载文件的前10m大小时不限速，大于10m后再以128kb/s限速可以增加以下配内容，修改nginx.conf文件
location /download {
       limit_rate_after 10m;
       limit_rate 128k;
 }


Nginx与zuul的区别
1、Nginx与Zuul的区别

相同点：Zuul和Nginx都可以实现负载均衡、反向代理（隐藏真实ip地址），过滤请求，实现网关的效果
不同点：Nginx--c语言开发
        Zuul--java语言开发
Zuul负载均衡实现：采用ribbon+eureka实现本地负载均衡
Nginx负载均衡实现：采用服务器实现负载均衡

Nginx相比zuul功能会更加强大，因为Nginx整合一些脚本语言（Nginx+lua）
Nginx适合于服务器端负载均衡
Zuul适合微服务中实现网关 粒度更小的过滤



